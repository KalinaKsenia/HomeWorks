import java.util.ArrayList;
public class HashSet<S> {
    private ArrayList<Object>[] buckets;
    private int size;
    private static final int INITIAL_CAPACITY = 16;

    public HashSet() {
        buckets = new ArrayList[INITIAL_CAPACITY];
        size = 0;
    }

    public void add(Object obj) {
        int bucketIndex = getBucketIndex(obj);
        if (buckets[bucketIndex] == null) {
            buckets[bucketIndex] = new ArrayList<>();
        }
        if (!buckets[bucketIndex].contains(obj)) {
            buckets[bucketIndex].add(obj);
            size++;
        }
    }

    public void remove(Object obj) {
        int bucketIndex = getBucketIndex(obj);
        if (buckets[bucketIndex] != null) {
            buckets[bucketIndex].remove(obj);
            size--;
        }
    }

    public boolean contains(Object obj) {
        int bucketIndex = getBucketIndex(obj);
        if (buckets[bucketIndex] != null) {
            return buckets[bucketIndex].contains(obj);
        }
        return false;
    }

    public int size() {
        return size;
    }

    private int getBucketIndex(Object obj) {
        int hashCode = obj.hashCode();
        return Math.abs(hashCode % buckets.length);
    }
    public static void main(String[] args) {
        HashSet<String> set = new HashSet<String>();
        set.add("1");
        set.add("3");
        set.add("9");
        set.remove("3");
            System.out.println(set);
        }
    }
